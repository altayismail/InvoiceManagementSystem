// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OdemeSistemi.Concrete;

#nullable disable

namespace OdemeSistemi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220922162338_odeme_class_changes")]
    partial class odeme_class_changes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OdemeSistemi.Entities.BankaHesabı", b =>
                {
                    b.Property<int>("BankaHesabıId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankaHesabıId"), 1L, 1);

                    b.Property<double>("BankaHesabıBakiye")
                        .HasColumnType("float");

                    b.Property<string>("BankaHesabıSahibiEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankaHesabıSahibiId")
                        .HasColumnType("int");

                    b.Property<string>("BankaHesabıSahibiIsim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankaHesabıSahibiSoyisim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankaHesabıSahibiTCNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankaHesabıŞirket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankaHesapNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankaHesabıId");

                    b.ToTable("BankaHesapları");
                });

            modelBuilder.Entity("OdemeSistemi.Entities.KrediKartı", b =>
                {
                    b.Property<int>("KrediKartıId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KrediKartıId"), 1L, 1);

                    b.Property<int>("KrediKartıBankaHesabıId")
                        .HasColumnType("int");

                    b.Property<string>("KrediKartıCVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrediKartıIsmi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrediKartıNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrediKartıSahibiEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrediKartıSonKullanımTarihiAy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrediKartıSonKullanımTarihiYıl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrediKartıTürü")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrediKartıUzerindekiIsim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KrediKartıId");

                    b.HasIndex("KrediKartıBankaHesabıId");

                    b.ToTable("KrediKartları");
                });

            modelBuilder.Entity("OdemeSistemi.Entities.Odeme", b =>
                {
                    b.Property<int>("OdemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdemeId"), 1L, 1);

                    b.Property<int>("OdemeAidatId")
                        .HasColumnType("int");

                    b.Property<bool>("OdemeBasariliMi")
                        .HasColumnType("bit");

                    b.Property<int>("OdemeFaturaId")
                        .HasColumnType("int");

                    b.Property<string>("OdemeKartNumarası")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeKartNumarasıSonKullanımAy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeKartNumarasıSonKullanımYıl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeKrediKartıCVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeKrediKartıUzerindekiIsim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OdemeNetTutarı")
                        .HasColumnType("float");

                    b.Property<string>("OdemeParaBirimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<double>("OdemeTutarı")
                        .HasColumnType("float");

                    b.Property<string>("OdemeYapanKullancıIpAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeYapanKullanıcıEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OdemeYapanKullanıcıId")
                        .HasColumnType("int");

                    b.Property<string>("OdemeYapanKullanıcıIsim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeYapanKullanıcıSehir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeYapanKullanıcıSoyisim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeYapanKullanıcıTCNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeYapanKullanıcıUlke")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OdemeId");

                    b.ToTable("Odemeler");
                });

            modelBuilder.Entity("OdemeSistemi.Entities.KrediKartı", b =>
                {
                    b.HasOne("OdemeSistemi.Entities.BankaHesabı", "KrediKartıBankaHesabı")
                        .WithMany("BankaHesabıKrediKartları")
                        .HasForeignKey("KrediKartıBankaHesabıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KrediKartıBankaHesabı");
                });

            modelBuilder.Entity("OdemeSistemi.Entities.BankaHesabı", b =>
                {
                    b.Navigation("BankaHesabıKrediKartları");
                });
#pragma warning restore 612, 618
        }
    }
}
