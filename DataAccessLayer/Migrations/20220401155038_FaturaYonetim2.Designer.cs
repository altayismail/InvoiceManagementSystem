// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220401155038_FaturaYonetim2")]
    partial class FaturaYonetim2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLayer.Concrete.Aidat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AidatSonOdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AidatTarihi")
                        .HasColumnType("datetime2");

                    b.Property<double>("AidatUcreti")
                        .HasColumnType("float");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullanıcıId");

                    b.ToTable("Aidatlar");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Daire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DaireBlok")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DaireDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("DaireKatı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DaireNo")
                        .HasColumnType("int");

                    b.Property<string>("DaireTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("int");

                    b.Property<int?>("KullanıcıId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullanıcıId1");

                    b.ToTable("Daireler");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FaturaSonOdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FaturaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaturaTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FaturaTutarı")
                        .HasColumnType("float");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullanıcıId");

                    b.ToTable("Faturalar");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kullanıcı", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DaireId")
                        .HasColumnType("int");

                    b.Property<string>("KullanıcıAraçBilgisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanıcıEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanıcıIsım")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanıcıSifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanıcıSoyisim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanıcıTCNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanıcıTelefonNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kullanıcılar");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Mesaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("int");

                    b.Property<string>("MesajIcerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MesajKonusu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MesajTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullanıcıId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Mesajlar");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Yonetici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("YoneticiEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoneticiIsım")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoneticiSifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoneticiSoyisim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoneticiTelefonNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yoneticiler");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Aidat", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Kullanıcı", "Kullanıcı")
                        .WithMany("KullanıcıAidatlar")
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Daire", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Kullanıcı", "Kullanıcı")
                        .WithMany()
                        .HasForeignKey("KullanıcıId1");

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Fatura", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Kullanıcı", "Kullanıcı")
                        .WithMany("KullanıcıFaturalar")
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Mesaj", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Kullanıcı", "Kullanıcı")
                        .WithMany()
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Yonetici", null)
                        .WithMany("Mesajlar")
                        .HasForeignKey("YoneticiId");

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kullanıcı", b =>
                {
                    b.Navigation("KullanıcıAidatlar");

                    b.Navigation("KullanıcıFaturalar");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Yonetici", b =>
                {
                    b.Navigation("Mesajlar");
                });
#pragma warning restore 612, 618
        }
    }
}
