@using EntityLayer.Concrete
@model Daire
@{
    ViewData["Title"] = "AddDaire";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<!-- Top header -->
<header class="navbar-toggler p-4">
    <p class="w3-left text-dark font-weight-bolder" style="font-size:20px">Daire Ekleme Sayfası</p>
    <p class="w3-right text-dark font-weight-normal" style="font-size:20px">
        <i class="icon-calendar mr-2"></i>@DateTime.Now.ToLongDateString()
    </p>
</header>
<hr />

@using (Html.BeginForm("AddDaire", "Daire", FormMethod.Post))
{
    <div class="row">
        <div class="col">
            <label for="formGroupExampleInput">Blok</label>
            @Html.DropDownListFor(x => x.DaireBlok, Enum.GetNames(typeof(Bloklar.Blok)).Select(x => new SelectListItem { Text = x }), new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.DaireBlok, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            <label for="formGroupExampleInput">Durum</label>
            @Html.DropDownListFor(x => x.DaireDurumu,
                    new[] { new SelectListItem { Text = "Dolu", Value = "True" },
                    new SelectListItem { Text = "Boş", Value = "False" } },
                    new { @class = "form-control", id = "dairedurumu"})
            @Html.ValidationMessageFor(x => x.DaireDurumu, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col">
            <label for="formGroupExampleInput">Daire No</label>
            @Html.TextBoxFor(x => x.DaireNo, new { @class = "form-control", @onkeypress="return /[0-9]/i.test(event.key)" })
            @Html.ValidationMessageFor(x => x.DaireNo, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            <label for="formGroupExampleInput">Kat</label>
            @Html.TextBoxFor(x => x.DaireKatı, new { @class = "form-control" , @onkeypress="return /[0-9]/i.test(event.key)"})
            @Html.ValidationMessageFor(x => x.DaireKatı, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col">
            <label for="formGroupExampleInput">Tip</label>
            @Html.DropDownListFor(x => x.DaireTipi,
                    new[] { new SelectListItem { Text = "0+1", Value = "0+1" },
                    new SelectListItem { Text = "1+1", Value = "1+1" },
                    new SelectListItem { Text = "2+1", Value = "2+1" },
                    new SelectListItem { Text = "3+1", Value = "3+1" }},
                    new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.DaireTipi, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            <label for="formGroupExampleInput">Kullanıcı</label>
            @Html.DropDownListFor(model => model.DaireKullanıcıId,
                    (List<SelectListItem>)ViewBag.kullanıcılar,
                     new { @class = "form-control", id = "kullanıcı" })
            @Html.ValidationMessageFor(x => x.DaireKullanıcıId, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col">
            <label for="formGroupExampleInput">Kira/Daire Sahibi</label>
            @Html.DropDownListFor(x => x.DaireKiradaMı,
                    new[] { new SelectListItem { Text = "Kira", Value = "Kira" },
                    new SelectListItem { Text = "Daire Sahibi", Value = "Daire Sahibi" } },
                    new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.DaireKiradaMı, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.ErrorMessage
        </div>
    }
    <button type="submit" id="AddButton" onclick="return confirm('Daire kaydediliyor, onaylıyor musunuz?');" class="btn btn-primary">Daireyi Kaydet<i class="icon-save ml-2"></i></button>
}