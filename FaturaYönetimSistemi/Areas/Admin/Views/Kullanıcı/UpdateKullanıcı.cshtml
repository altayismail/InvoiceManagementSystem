@using EntityLayer.Concrete
@model Kullanıcı
@{
    ViewData["Title"] = "UpdateKullanıcı";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<!-- Top header -->
<header class="navbar-toggler p-4">
    <p class="w3-left text-dark font-weight-bolder" style="font-size:20px">Kullanıcı Düzenleme Sayfası</p>
    <p class="w3-right text-dark font-weight-normal" style="font-size:20px">
        <i class="icon-calendar mr-2"></i>@DateTime.Now.ToLongDateString()
    </p>
</header>
<hr />

@using (Html.BeginForm("UpdateKullanıcı", "Kullanıcı", FormMethod.Post))
{
    @Html.HiddenFor(x => x.KullanıcıId, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.KullanıcıId, "", new { @class = "text-danger" })
    <br />
    @Html.Label("İsim")
    @Html.TextBoxFor(x => x.KullanıcıIsım, new { @class = "form-control", @onkeypress="return /[A-Za-z]/i.test(event.key)" })
    @Html.ValidationMessageFor(x => x.KullanıcıIsım, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Soyisim")
    @Html.TextBoxFor(x => x.KullanıcıSoyisim, new { @class = "form-control", @onkeypress="return /[A-Za-z]/i.test(event.key)" })
    @Html.ValidationMessageFor(x => x.KullanıcıSoyisim, "", new { @class = "text-danger" })
    <br />
    @Html.Label("TC Kimlik No")
    @Html.TextBoxFor(x => x.KullanıcıTCNo, new { @class = "form-control", @onkeypress="return /[0-9]/i.test(event.key)" })
    @Html.ValidationMessageFor(x => x.KullanıcıTCNo, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Telefon No")
    @Html.TextBoxFor(x => x.KullanıcıTelefonNo, new { @class = "form-control", @onkeypress="return /[0-9]/i.test(event.key)" })
    @Html.ValidationMessageFor(x => x.KullanıcıTelefonNo, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Email")
    @Html.TextBoxFor(x => x.KullanıcıEmail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.KullanıcıEmail, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Şifre")
    @Html.TextBoxFor(x => x.KullanıcıSifre, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.KullanıcıSifre, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Araç Bilgisi")
    @Html.TextBoxFor(x => x.KullanıcıAraçBilgisi, new { @class = "form-control" })
    <br />
    @Html.Label("Daire No")
    @Html.TextBoxFor(x => x.KullanıcıDaireNo, new { @class = "form-control", @onkeypress="return /[0-9]/i.test(event.key)" })
    @Html.ValidationMessageFor(x => x.KullanıcıDaireNo, "", new { @class = "text-danger" })
    <br />
    @if(ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.ErrorMessage
        </div>
    } 
    <button id="UpdateButton" onclick="return confirm('Kullanıcı güncelleniyor, onaylıyor musunuz?');" class="btn btn-warning mb-3">Kaydet<i class="icon-save ml-2"></i></button>
}

